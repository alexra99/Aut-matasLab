import java_cup.runtime.*;
import java.io.*;

parser code {:
	public static void main(String args[]) throws Exception {

 		FileInputStream stream = new java.io.FileInputStream(args[0]);
       		Reader reader = new java.io.InputStreamReader(stream);

		try{
			new parser(new Yylex(reader)).parse();
		}
		catch ( Exception e) {
			System.out.println("Analisis INCORRECTO !!");
			System.exit(1);
		}
		System.out.println("Analisis Correcto ");
	
		}
:}

terminal 	PUBLIC, CLASS, STATIC, VARIABLE, NUMERO, 
			VOID, ENTERO, BOOLEAN, RETORNO, ASIGNACION,
			PUNTOYCOMA, COMA, FOR, WHILE, DO,
			LLAVEABIERTA, LLAVECERRADA, PARENTESISABIERTO, PARENTESISCERRADO, INCDEC,
			ARITMETICA, RELACIONAL, LOGICA, VERDAFALSO, FUNCION;


non terminal 	lambda, clase, dentroclase, funciones, argumentos, 
				argumentosaux, resto, restoaux, declaracion, asignacion, 
				llamadafuncion, argumentosllamada, buclefor, buclewhile, bucledowhile, 
				retorno, expresionlogica, elaux, expresionnumerica, enaux,
				declaracionasignacion;


clase ::= PUBLIC CLASS VARIABLE LLAVEABIERTA funciones LLAVECERRADA;

funciones ::= lambda 
	| PUBLIC STATIC ENTERO FUNCION argumentos LLAVEABIERTA resto LLAVECERRADA funciones
	| PUBLIC STATIC BOOLEAN FUNCION argumentos LLAVEABIERTA resto LLAVECERRADA funciones
	| PUBLIC STATIC VOID FUNCION argumentos LLAVEABIERTA resto LLAVECERRADA funciones;
argumentos ::= PARENTESISCERRADO
	| argumentosaux PARENTESISCERRADO;
argumentosaux ::= declaracion COMA argumentosaux 
	| declaracion;


resto ::= lambda
	| restoaux PUNTOYCOMA resto
	| buclefor resto
	| buclewhile resto;
restoaux ::= declaracionasignacion
	| INCDEC
	| asignacion 
	| llamadafuncion
	| bucledowhile
	| retorno;


declaracion ::= BOOLEAN VARIABLE 
	| ENTERO VARIABLE;
	
declaracionasignacion ::= declaracion
	| BOOLEAN asignacion
	| ENTERO asignacion;

asignacion ::= VARIABLE ASIGNACION expresionlogica
	| VARIABLE ASIGNACION expresionnumerica
	| VARIABLE ASIGNACION NUMERO
	| VARIABLE ASIGNACION VERDAFALSO
	| VARIABLE ASIGNACION VARIABLE
	| VARIABLE ASIGNACION llamadafuncion;

llamadafuncion ::= FUNCION argumentosllamada PARENTESISCERRADO;
argumentosllamada ::= VARIABLE 
	| VARIABLE COMA argumentosllamada
	| NUMERO
	| NUMERO COMA argumentosllamada
	| VERDAFALSO
	| VERDAFALSO argumentosllamada;

buclefor ::= FOR PARENTESISABIERTO declaracionasignacion PUNTOYCOMA expresionlogica PUNTOYCOMA INCDEC PARENTESISCERRADO LLAVEABIERTA resto LLAVECERRADA;

buclewhile ::= WHILE PARENTESISABIERTO expresionlogica PARENTESISCERRADO LLAVEABIERTA resto LLAVECERRADA;

bucledowhile ::= DO LLAVEABIERTA resto LLAVECERRADA WHILE PARENTESISABIERTO expresionlogica PARENTESISCERRADO;

retorno ::= RETORNO NUMERO
	| RETORNO VERDAFALSO
	| RETORNO expresionnumerica
	| RETORNO expresionlogica
	| RETORNO VARIABLE;


expresionlogica ::= elaux
	| elaux LOGICA expresionlogica;
	
elaux ::= VERDAFALSO
	| VARIABLE
	| expresionnumerica RELACIONAL expresionnumerica
	| PARENTESISABIERTO expresionlogica PARENTESISCERRADO;

expresionnumerica ::= enaux
	| enaux ARITMETICA expresionnumerica;

enaux ::= NUMERO
	| VARIABLE
	| PARENTESISABIERTO expresionnumerica PARENTESISCERRADO;


lambda ::=  ;